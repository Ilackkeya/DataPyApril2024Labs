Reports on people collection:


1. Average age
Expected Result: 41.41

db.people.aggregate([{$group: {_id: null, avg_age: {$avg:"$age"} } } ] )


2. Average age by gender
Expected Result: Female: 42.04, Male: 40.60

db.people.aggregate([ {$group: {_id: "$gender", avg_age: {$avg:"$age"}}}, {$project: {_id:0, gender:"$_id", avg_age:1 }}, {$sort: {gender:1}} ] )

3. Number of people by gender
Expected Result: Female: 113, Male: 87

db.people.aggregate([ {$group: {_id: "$gender", num_people: {$count:{}}}}, {$project: {_id:0, gender:"$_id", num_people:1 }}, {$sort: {gender:1}} ] )

4. 3 oldest people
Expected Result: Phyllis Gray 81, Melissa Banks 79, Walter Bishop 76

db.people.aggregate([ {$project: {first_name:1, last_name:1, age:1}},
{$sort: {age:-1}}, {$limit:3} ] )

5. 5 youngest people, display only their names as one value (first + " " + last) and their ages
Expected Result: Nicholas Hunter 17, Kenneth Burns 18, Kathy Hayes 19, Edward Hayes 21, Steve Vasquez 21)

db.people.aggregate([ {$project: {name: {$concat: ['$first_name',' ','$last_name']}, age:1}}, {$sort: {age:1}}, {$limit:5} ] )

6. Average number of children
Expected Result: 2.34

db.people.aggregate([{$group: {_id: null, avg_children: {$avg:{$size:"$children"} } } } ] )

7. Name and age of children in Michigan who are under age ten
Expected Result: Adam 0, Janice 1, Judith 3, Beverly 4, Antonio 6, Jeremy 7

#not completed
db.people.find({state: "Michigan", 'children.age': {$lt:10}}, {'children.name':1, 'children.age':1, _id:0})


8. Average age of child by state, sorted with oldest first
Expected Result: Rhode Island 20, Idaho 20, Louisiana 15.7, Kentucky 13.1, Indiana 12.6, ...

#not completed
db.people.aggregate([ {$group: {_id: "$state", avg_age: {$avg: "$children.age"}}},
 {$project: {_id:0, state:'$_id', avg_age:1 }},
 {$sort: {state:1, 'children.age': -1}} ] )




Reports on orders collection:

9. Find the total dollar amount of all sales ever. Use the total field.
Expected Result: 680.92

db.orders.aggregate([{$group: {_id: null, total: {$sum: '$total'} }}])

10. Find the total dollar amount of sales on 2017-05-22. Use the total field.
Expected Result: 271.2

db.orders.aggregate([{$match: {date: '2017-05-22'}}, {$group: {_id: null, total: {$sum: '$total'} }}])

11. Find the date with the greatest number of orders. Include the date and the number of orders.
Expected Result: 2017-05-04 3

db.orders.aggregate([{$group: {_id: '$date', greatest: {$max: '$total'}, num_orders: {$count:{}} }}, {$project: {date:'$_id',num_orders:1, _id:0}}, {sort: {num_orders:-1}}, {$limit: 1}])


12.Find the date with the greatest total sales. Include the date and the dollar amount for that day.
Expected Result: 2017-05-22 $271.2

db.orders.aggregate([{$group: {_id: '$date', greatest: {$sum: '$total'} }},
                     {$project: {date:'$_id', greatest:1, _id:0}},
                     {$sort: {greatest:-1}}, {$limit: 1}])


13. Find the top three products that have had the greatest number sold. Include product name and number sold.
Expected Result: Pine Nuts 13, Cheese 8, Top Hat 5

#not completed
db.orders.aggregate([{$group: {_id: '$items.product', num_pdt: {$count:{}} }},
                     {$project: {product:'$_id', num_pdt:1, _id:0}},
                     {$sort: {num_pdt:-1}}, {$limit: 3}])

14. Find the top item that has the greatest revenue (number sold * price). Include product name and dollar amount of sales.
Expected Result: Shoes 197.98


#not completed
db.orders.aggregate([{$group: {_id: "$items.product", revenue: {$multiply: ['$items.count', '$items.price']}}}, {$project: {_id:0, product:'$_id', revenue: 1 }}, {$sort: {revenue:-1}}, {$limit: 1}])
